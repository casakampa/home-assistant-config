- id: 81754060-8694-489c-8366-4a1262adc388
  alias: "Verlichting: Kleurupdate"
  description: "Verander de kleurtemperatuur van actieve lampen"
  mode: restart
  trigger:
    - platform: state
      entity_id: sensor.kleurtemperatuur_verlichting
  condition:
    - "{{ has_value(trigger.entity_id) }}"
  action:
    - repeat:
        for_each:
          - "light.keuken_zha_group_0x0002"
          - "light.woonkamer_zha_group_0x0003"
          - "light.slaapkamer_zha_group_0x0005"
          - "light.eethoek_zha_group_0x0009"
          - "light.lamp_bioscoopkamer"
        sequence:
          - if:
              - "{{ is_state(repeat.item, 'on') }}" # verlichting moet ingeschakeld zijn, anders zetten onderstaande acties onbedoeld de verlichting aan.
            then:
              - service: light.turn_on
                target:
                  entity_id: "{{ repeat.item }}"
                data:
                  color_temp_kelvin: "{{ states('sensor.kleurtemperatuur_verlichting') }}"

- id: 4f96b956-cc4f-4ac7-b046-4b6bc073e417
  alias: "Verlichting: Woonkamer"
  description: >-
    Deze automatisering regelt de verlichting in de woonkamer.

    Wanneer iemand aanwezig is, wordt de verlichting in de volgende situatie uitgeschakeld:
      - Er is voldoende daglicht

    Wanneer iemand aanwezig is, of thuiskomt, wordt de verlichting in de volgende situaties ingeschakeld:
      - Het schemert, vanwege slecht weer of de zon die opkomt of ondergaat
      - De vooringestelde hoeveelheid minuten voorafgaand aan het ingestelde tijdstip

    Bij bovenstaande situaties wordt gecontroleerd of er visite aanwezig is, anders wordt het niet uitgevoerd

    Wanneer niemand aanwezig is, wordt de verlichting in de volgende situatie ingeschakeld:
      - Bij zonsondergang (het uitschakelen van de verlichting wordt gedaan door de aanwezigheidssimulatie)
  mode: restart
  trace:
    stored_traces: 40
  trigger:
    - platform: state
      entity_id: sensor.drempelwaarde_woonkamer
      to: "dag"
      for:
        minutes: 2
      id: "woonkamer_dag"
    - platform: state
      entity_id: zone.home
      from: "0"
      id: "thuiskomst"
    - platform: state
      entity_id: sensor.drempelwaarde_woonkamer
      to: "schemer"
      for:
        minutes: 2
      id: "woonkamer_schemer"
    - platform: sun
      event: sunset
      offset: "-00:15:00"
      id: "zonsondergang"
    - platform: sun
      event: sunset
      offset: "00:30:00"
      id: "helderheid_verlagen"
    - platform: template
      value_template: >-
        {{ now() > today_at(states('input_datetime.light_woonkamer_night_time')) - timedelta(minutes = int(states('input_number.verlichting_woonkamer_dimtijd'), 30)) }}
      id: "verlichting_dimmen"
    - platform: time
      at: input_datetime.light_woonkamer_night_time
      id: "verlichting_uit"
  variables:
    transitie: &transitietijd 30
    brightness_pct: &helderheid "{{ int(states('input_number.verlichting_woonkamer_lichtsterkte'), 30) }}"
    verlichting: &verlichting "light.woonkamer_zha_group_0x0003"
    anchor:
      - &color_temp "{{ states('sensor.kleurtemperatuur_verlichting') }}"
      - &geen_match "Er is geen passende actie voor deze trigger."
      - &chromecast_geen_netflix "{{ not is_state_attr('media_player.chromecast_woonkamer', 'app_name', 'Netflix') }}"
  condition:
    - "{{ is_state('input_boolean.visite', 'off') }}"
  action:
    - choose:
        - conditions:
            - "{{ is_state(verlichting, 'on') }}" # verlichting moet ingeschakeld zijn, anders zetten onderstaande acties onbedoeld de verlichting aan.
            - "{{ trigger.id in ['helderheid_verlagen', 'woonkamer_dag'] }}"
          sequence:
            - choose:
                - conditions:
                    - "{{ trigger.id == 'helderheid_verlagen' }}"
                  #  - alias: "Voorkom dat deze automatisering andere triggers overschrijft, door deze alleen uit te voeren voordat het nacht wordt."
                  #    condition: time
                  #    before: input_datetime.light_home_night_time
                  sequence:
                    - service: light.turn_on
                      target:
                        entity_id: *verlichting
                      data:
                        transition: "{{ transitie | multiply(10, 300) }}"
                        brightness_pct: *helderheid
                - conditions:
                    - "{{ trigger.id == 'woonkamer_dag' }}"
                    - alias: "Alleen als de zonsondergang niet binnen 20 minuten plaatsvindt"
                      condition: sun
                      before: sunset
                      before_offset: "00:20:00"
                  sequence:
                    - service: light.turn_off
                      target:
                        entity_id: *verlichting
                      data:
                        transition: *transitietijd
        - conditions:
            - "{{ trigger.id == 'zonsondergang' }}"
          sequence:
            - if:
                - "{{ states('zone.home') == '0' }}"
              then:
                - service: light.turn_on
                  target:
                    entity_id: *verlichting
                  data:
                    transition: *transitietijd
                    brightness_pct: *helderheid
                    color_temp_kelvin: *color_temp
              else:
                - stop: *geen_match
        - conditions:
            - "{{ states('zone.home') >= '1' }}"
          sequence:
            - choose:
                - conditions:
                    - "{{ is_state(verlichting, 'off') }}"
                  sequence:
                    - if:
                        - or:
                            - "{{ trigger.id == 'woonkamer_schemer' }}"
                            - and:
                                - "{{ trigger.id == 'thuiskomst' }}"
                                - "{{ is_state('sensor.drempelwaarde_woonkamer', 'schemer') }}"
                        - alias: "Alleen wanneer het script van de ochtendroutine inactief is"
                          condition: state
                          entity_id: script.wekker_met_ochtendroutine
                          state: "off"
                        - alias: "Niet voor de ingestelde tijd, anders wordt de verlichting in de zomer heel vroeg ingeschakeld"
                          condition: time
                          after: input_datetime.light_home_day_time
                      then:
                        - service: light.turn_on
                          target:
                            entity_id: *verlichting
                          data:
                            transition: *transitietijd
                            brightness_pct: "{{ brightness_pct + 10 }}"
                            color_temp_kelvin: *color_temp
                      else:
                        - stop: *geen_match
                - conditions:
                    - "{{ is_state(verlichting, 'on') }}"
                  sequence:
                    - choose:
                        - conditions:
                            - "{{ trigger.id == 'verlichting_dimmen' }}"
                            - *chromecast_geen_netflix
                          sequence:
                            - alias: "Verlaag de lichtsterkte naar 1 procent en verhoog tegelijkertijd de kleurtemperatuur naar de maximale waarde"
                              service: light.turn_on
                              target:
                                entity_id: *verlichting
                              data:
                                transition: "{{ int(states('input_number.verlichting_woonkamer_dimtijd'), 30) | multiply(60, 1800) }}"
                                brightness_pct: "1"
                                color_temp_kelvin: "{{ int(state_attr(verlichting, 'min_color_temp_kelvin'), 2000) }}"
                        - conditions:
                            - "{{ trigger.id == 'verlichting_uit' }}"
                            - *chromecast_geen_netflix
                          sequence:
                            - service: light.turn_off
                              target:
                                entity_id: *verlichting
                      default:
                        - stop: *geen_match
              default:
                - stop: *geen_match
      default:
        - stop: *geen_match

- id: b7481a4a-979c-46bc-a078-9950568a99dc
  alias: "Bij hoge temperatuur, alle lampen 100%"
  description: "Zekerheid voor alles, maar stel dat er enorme warmte in een ruimte is dan wil ik hier van op de hoogte worden gebracht."
  trigger:
    - platform: numeric_state
      entity_id:
        - sensor.hue_motion_woonkamer_temperature
        - sensor.hue_motion_trap_temperature
        - sensor.hue_motion_zolder_temperature
        - sensor.hue_motion_gang_temperature
        - sensor.hue_motion_overloop_temperature
      above: 50
  mode: parallel
  action:
    - parallel:
        - service: light.turn_on
          target:
            entity_id: light.alle_lampen_zha_group_0x0006
          data:
            brightness_pct: 100
            flash: long
        - service: notify.iphone_12
          data:
            message: "Waarschuwing: {{ trigger.to_state.name }} meet een temperatuur boven 50 graden"
            data:
              push:
                interruption-level: critical

### Time activated ###

- id: ea4667b4-17d0-46be-ac99-c8415ebced8b
  alias: "Verlichting: Bioscoopkamer"
  description: "Deze automatisering regelt de verlichting in de bioscoopkamer"
  mode: restart
  trigger:
    - platform: state
      entity_id: input_button.lg_pixel_refresh_kort
      id: "pixel_refresh_kort"
    - platform: state
      entity_id: input_button.lg_pixel_refresh_lang
      id: "pixel_refresh_lang"
    - platform: state
      entity_id: sensor.drempelwaarde_achtertuin
      to: "schemer"
      id: "schemer"
    - platform: state
      entity_id: switch.stekker_bioscoopkamer
      to: "on"
      id: "stekker_aan"
    - platform: state
      entity_id: switch.stekker_bioscoopkamer
      to: "off"
      for:
        seconds: 30
      id: "stekker_uit"
    - platform: state
      entity_id: media_player.lg_oled
      to: "off"
      id: "lg_uit"
    - platform: state
      entity_id: media_player.lg_oled
      attribute: source
      to:
        - "Apple TV"
        - "KPN iTV"
        - "Live TV"
        - "Netflix"
        - "Photo & Video"
        - "YouTube"
        - "NPO"
      id: "streaming_aan"
  variables:
    lamp: &lamp "light.lamp_bioscoopkamer"
    anchor:
      - &transitie 5
      - &lichtsterkte_laag 5
      - &lichtsterkte_hoog 50
      - &min_color_temp_kelvin "{{ int(state_attr('light.lamp_bioscoopkamer', 'min_color_temp_kelvin'), 2202) }}"
      - &zon "{{ has_value('sun.sun') and is_state('sun.sun', 'below_horizon') }}"
  action:
    - alias: "Wat moet er gebeuren?"
      choose:
        - conditions:
            - "{{ trigger.id in ['pixel_refresh_kort', 'pixel_refresh_lang'] }}"
          sequence:
            - delay:
                seconds: 30
            - alias: "Zet de lamp in de bioscoopkamer uit"
              service: light.turn_off
              target:
                entity_id: *lamp
            - delay: "{{ 900 if trigger.id == 'pixel_refresh_kort' else 3600 }}"
            - alias: "Zet de stekker in de bioscoopkamer uit"
              service: switch.turn_off
              target:
                entity_id: "switch.stekker_bioscoopkamer"
        - conditions:
            - "{{ is_state(lamp, 'off') }}"
          sequence:
            - alias: "De lamp staat uit, kies wat er met de verlichting moet gebeuren"
              choose:
                - conditions:
                    - condition: trigger
                      id: "schemer"
                    - "{{ is_state('switch.stekker_bioscoopkamer', 'on') }}"
                  sequence:
                    - alias: "Zet bij schemer de verlichting in de bioscoopkamer zachtjes aan"
                      service: light.turn_on
                      target:
                        entity_id: *lamp
                      data:
                        brightness_pct: *lichtsterkte_laag
                        color_temp_kelvin: *min_color_temp_kelvin
                - conditions:
                    - condition: trigger
                      id: "stekker_aan"
                    - *zon
                  sequence:
                    - alias: "Zet na zonsondergang de verlichting in de bioscoopkamer aan"
                      service: light.turn_on
                      target:
                        entity_id: *lamp
                      data:
                        transition: *transitie
                        brightness_pct: *lichtsterkte_hoog
                        color_temp_kelvin: *color_temp
        - conditions:
            - "{{ is_state(lamp, 'on') }}"
          sequence:
            - alias: "De lamp staat aan, kies wat er met de verlichting moet gebeuren"
              choose:
                - conditions:
                    - condition: trigger
                      id: "stekker_uit"
                  sequence:
                    - alias: "Zet 30 seconden na het uitschakelen van de stekker de verlichting in de bioscoopkamer uit"
                      service: light.turn_off
                      target:
                        entity_id: *lamp
                - conditions:
                    - condition: trigger
                      id: "lg_uit"
                  sequence:
                    - alias: "Verhoog de lichtsterkte wanneer de LG OLED wordt uitgeschakeld"
                      service: light.turn_on
                      target:
                        entity_id: *lamp
                      data:
                        transition: *transitie
                        brightness_pct: *lichtsterkte_hoog
                        color_temp_kelvin: *color_temp
                - conditions:
                    - condition: trigger
                      id: "streaming_aan"
                    - *zon
                  sequence:
                    - alias: "Verlaag de lichtsterkte wanneer een streamingapp wordt gestart op de LG OLED"
                      service: light.turn_on
                      target:
                        entity_id: *lamp
                      data:
                        transition: *transitie
                        brightness_pct: *lichtsterkte_laag
                        color_temp_kelvin: *min_color_temp_kelvin
      default:
        - stop: "Er is iets misgegaan in de automatisering voor de verlichting van de bioscoopkamer"
          error: true

- id: a093e168-18fe-49e1-a84c-6912c5b3614c
  alias: "Verlichting: Voortuin"
  description: "Deze automatisering regelt de verlichting in de voortuin"
  trigger:
    - platform: state
      entity_id: sun.sun
      to:
        - below_horizon
        - above_horizon
      id: zon
    - platform: time
      at: input_datetime.light_home_day_time
      id: ochtend
    - platform: time
      at: "00:00"
      id: nacht
  variables:
    lamp: "light.buitenlamp_voortuin"
  action:
    - alias: "Kies het juiste scenario om de lamp te schakelen"
      choose:
        - conditions:
            - "{{ trigger.id in ['ochtend', 'zon'] }}"
            - "{{ is_state('sun.sun', 'below_horizon') }}"
            - "{{ is_state(lamp, 'off') }}"
          sequence:
            - service: light.turn_on
              target:
                entity_id: "{{ lamp }}"
              data:
                brightness_pct: 30
        - conditions:
            - or:
                - "{{ is_state('sun.sun', 'above_horizon') }}"
                - "{{ trigger.id == 'nacht' }}"
            - "{{ is_state(lamp, 'on') }}"
          sequence:
            - service: light.turn_off
              target:
                entity_id: "{{ lamp }}"
      default:
        - stop: "Geen passend scenario voor deze trigger"

- id: 7614bce6-ac20-43f0-b767-5ad2e2773ec9
  alias: "Verlichting: Trapkast"
  description: "Deze automatisering regelt de verlichting in de trapkast"
  trigger:
    - platform: state
      entity_id: binary_sensor.deursensor_trapkast
    - platform: state
      entity_id: light.lamp_trapkast
      to: "on"
      for:
        minutes: 10
  variables:
    lamp: "light.lamp_trapkast"
    sensor: "binary_sensor.deursensor_trapkast"
  condition:
    - "{{ has_value(trigger.entity_id) }}"
  action:
    - if:
        - "{{ trigger.entity_id == sensor and is_state(sensor, 'on') }}"
      then:
        - service: light.turn_on
          target:
            entity_id: "{{ lamp }}"
          data:
            brightness_pct: 80
            color_temp_kelvin: 4000
      else:
        - service: light.turn_off
          target:
            entity_id: "{{ lamp }}"

- id: 3aace0f0-00a2-4c66-96f4-958d873cf660
  alias: "Verlichting: Slaapkamer (computer)"
  description: "Deze automatisering regelt bij gebruik van de computer de verlichting in de slaapkamer"
  trigger:
    - platform: state
      entity_id: device_tracker.gamepc_ryzen5
      to: "home"
      id: computer
    - platform: state
      entity_id: sensor.drempelwaarde_woonkamer
      id: sensor
    - platform: state
      entity_id: sun.sun
      to: "below_horizon"
      id: sun
  condition:
    - "{{ has_value(trigger.entity_id) }}"
    - or:
        - "{{ trigger.id in ['sun', 'sensor'] and is_state('device_tracker.gamepc_ryzen5', 'home') }}"
        - "{{ trigger.id == 'computer' and is_state('sun.sun', 'below_horizon') }}"
  action:
    - alias: "Activeer de juiste mode"
      service: input_select.select_option
      target:
        entity_id: input_select.dimmer_mode
      data:
        option: "Verlichting"
    - alias: "Stuur de verlichting aan in de slaapkamer via script.hue_dimmer_multimedia_logica"
      service: script.turn_on
      target:
        entity_id: script.hue_dimmer_multimedia_logica
      data:
        variables:
          light: "light.slaapkamer_zha_group_0x0005"
          command: >
            {{ iif(is_state('sensor.drempelwaarde_woonkamer', 'dag'), 'off', 'on') }}_short_release
