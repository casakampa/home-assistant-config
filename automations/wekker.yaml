- id: 5c4f46f1-67e7-4894-a0da-11a7c41c76d0
  alias: "Wekker: Ochtendroutine"
  description: "Deze automatisering activeert per werkdag de voorgeprogrammeerde ochtendroutine, met daarin de wekker en automatiseringen voor de verlichting"
  initial_state: true
  mode: parallel
  trigger:
    - platform: template
      value_template: >-
        {{ as_local(now() + timedelta(minutes = (states('input_number.wekker_wake_up_tijdsspanne') | int(15)))) >= today_at(states('input_datetime.wektijd_maandag')) }}
      id: "wekker_maandag"
    - platform: template
      value_template: >-
        {{ as_local(now() + timedelta(minutes = (states('input_number.wekker_wake_up_tijdsspanne') | int(15)))) >= today_at(states('input_datetime.wektijd_dinsdag')) }}
      id: "wekker_dinsdag"
    - platform: template
      value_template: >-
        {{ as_local(now() + timedelta(minutes = (states('input_number.wekker_wake_up_tijdsspanne') | int(15)))) >= today_at(states('input_datetime.wektijd_woensdag')) }}
      id: "wekker_woensdag"
    - platform: template
      value_template: >-
        {{ as_local(now() + timedelta(minutes = (states('input_number.wekker_wake_up_tijdsspanne') | int(15)))) >= today_at(states('input_datetime.wektijd_donderdag')) }}
      id: "wekker_donderdag"
    - platform: template
      value_template: >-
        {{ as_local(now() + timedelta(minutes = (states('input_number.wekker_wake_up_tijdsspanne') | int(15)))) >= today_at(states('input_datetime.wektijd_vrijdag')) }}
      id: "wekker_vrijdag"
  condition:
    - "{{ is_state('binary_sensor.workday_sensor', 'on') }}"
    - "{{ is_state('sensor.wekkermodus', 'Actief') }}"
  action:
    - variables:
        anchors:
          - &start_script_ochtendroutine
            service: script.turn_on
            target:
              entity_id: script.wekker_met_ochtendroutine
    - alias: "Execute the automation based on the conditions, weekday and calculated trigger time"
      choose:
        - conditions:
            - condition: trigger
              id: "wekker_maandag"
            - condition: time
              weekday:
                - mon
            - alias: "Is de wekker voor vandaag ingeschakeld"
              condition: state
              entity_id: input_boolean.wekker_maandag
              state: "on"
          sequence:
            - <<: *start_script_ochtendroutine
              data:
                variables:
                  werklocatie: "{{ states('input_select.werklocatie_maandag') | lower }}"
        - conditions:
            - condition: trigger
              id: "wekker_dinsdag"
            - condition: time
              weekday:
                - tue
            - alias: "Is de wekker voor vandaag ingeschakeld"
              condition: state
              entity_id: input_boolean.wekker_dinsdag
              state: "on"
          sequence:
            - <<: *start_script_ochtendroutine
              data:
                variables:
                  werklocatie: "{{ states('input_select.werklocatie_dinsdag') | lower }}"
        - conditions:
            - condition: trigger
              id: "wekker_woensdag"
            - condition: time
              weekday:
                - wed
            - alias: "Is de wekker voor vandaag ingeschakeld"
              condition: state
              entity_id: input_boolean.wekker_woensdag
              state: "on"
          sequence:
            - <<: *start_script_ochtendroutine
              data:
                variables:
                  werklocatie: "{{ states('input_select.werklocatie_woensdag') | lower }}"
        - conditions:
            - condition: trigger
              id: "wekker_donderdag"
            - condition: time
              weekday:
                - thu
            - alias: "Is de wekker voor vandaag ingeschakeld"
              condition: state
              entity_id: input_boolean.wekker_donderdag
              state: "on"
          sequence:
            - <<: *start_script_ochtendroutine
              data:
                variables:
                  werklocatie: "{{ states('input_select.werklocatie_donderdag') | lower }}"
        - conditions:
            - condition: trigger
              id: "wekker_vrijdag"
            - condition: time
              weekday:
                - fri
            - alias: "Is de wekker voor vandaag ingeschakeld"
              condition: state
              entity_id: input_boolean.wekker_vrijdag
              state: "on"
          sequence:
            - <<: *start_script_ochtendroutine
              data:
                variables:
                  werklocatie: "{{ states('input_select.werklocatie_vrijdag') | lower }}"

- id: 8753cfbe-5d4b-4e2b-aca0-c9b43ebd3141
  alias: "Wekker: Controle actieve modus"
  description: "Ga elke zondag om 20:30 na of de wekker ingeschakeld moet worden, bij actieve vakantiemodus"
  trigger:
    - platform: time
      at: "20:30"
  condition:
    - "{{ is_state('sensor.wekkermodus', 'Vakantie') }}"
    - condition: time
      weekday:
        - sun
  variables:
    boolean_wekker: "input_boolean.wekker_status"
    wekkermodus: "wekker"
    vakantiemodus: "vakantie"
    anchors:
      - &action_activeer_wekker
        action: "{{ wekkermodus }}"
        title: "Ja, wijzig naar Wekkermodus"
        icon: "sfsymbols:alarm"
      - &action_activeer_vakantie
        action: "{{ vakantiemodus }}"
        title: "Nee"
        icon: "sfsymbols:checkmark.square"
        destructive: true
  action:
    - alias: "Herinner aan de vraag of de wekkermodus gewijzigd moet worden"
      repeat:
        while: "{{ is_state('sensor.wekkermodus', 'Vakantie') }}"
        sequence:
          - service: notify.iphone_12
            data:
              message: "De wekker staat op Vakantiemodus. Wil je dit wijzigen?"
              data:
                actions:
                  - *action_activeer_wekker
                  - *action_activeer_vakantie
                tag: "{{ this.entity_id }}"
          - alias: "Wacht op gemaakte keuze"
            wait_for_trigger:
              - platform: event
                event_type: mobile_app_notification_action
                event_data:
                  action: "{{ wekkermodus }}"
              - platform: event
                event_type: mobile_app_notification_action
                event_data:
                  action: "{{ vakantiemodus }}"
            timeout:
              minutes: "5"
          - alias: "Ga door wanneer er via de app een keuze is gemaakt, anders wordt de melding herhaald."
            if:
              - "{{ wait.trigger is not none }}"
            then:
              - alias: "Activeer de wekkermodus"
                if:
                  - "{{ wait.trigger.event.data.action == wekkermodus }}"
                then:
                  - service: input_boolean.turn_on
                    target:
                      entity_id: "{{ boolean_wekker }}"
                else:
                  - stop: "Wekker is niet geactiveerd, vakantiemodus blijft actief."
