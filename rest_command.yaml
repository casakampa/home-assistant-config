# Dit RESTful command wordt gebruikt om informatie te uploaden naar PVOutput middels een automatisering
pvoutput_status_update:
  url: "https://pvoutput.org/service/r2/addstatus.jsp"
  method: POST
  headers:
    X-Pvoutput-Apikey: !secret pvoutput_apikey
    X-Pvoutput-SystemId: !secret pvoutput_systemid
  content_type: application/x-www-form-urlencoded
  timeout: 30
  payload: "d={{now().strftime('%Y%m%d')}}&t={{now().strftime('%H:%M')}}&v1={{ states('sensor.envoy_energy_production_today') }}&v2={{ int(states('sensor.envoy_current_power_production'), 0) }}&v3={{ float(states('sensor.dsmr_day_consumption_electricity_merged'), 0) | multiply(1000) | round(0) }}&v4={{ int(states('sensor.dsmr_reading_electricity_currently_delivered'), 0) | multiply(1000) }}&n=1&v5={{ states('sensor.buitentemperatuur') }}&v6={{ states('sensor.dsmr_reading_phase_voltage_l1') | round(1, 0) }}"
  # origineelpayload: "d={{now().strftime('%Y%m%d')}}&t={{now().strftime('%H:%M')}}&v2={{ int(states('sensor.envoy_current_power_production'), 0) }}&v4={{ ( int(states('sensor.dsmr_reading_electricity_currently_delivered'), 0) | multiply(1000)) }}&v5={{ states('sensor.buitentemperatuur') }}&v6={{ states('sensor.dsmr_reading_phase_voltage_l1') | round(1, 0) }}"
