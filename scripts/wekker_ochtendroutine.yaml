wekker_ochtendroutine:
  alias: "Wekker met wake-up light en ochtendroutine"
  icon: "mdi:weather-sunset-up"
  description: "Routine voor het wekken van Maarten, tot en met melden dat er vertrokken moet worden om op tijd te zijn op het werk"
  sequence:
    - parallel:
        - alias: "Update input_datetime met juiste waarde, zodat verlichting woonkamer overeenkomt met wektijd."
          action: input_datetime.set_datetime
          target:
            entity_id: input_datetime.light_home_day_time
          data:
            time: "{{ now().strftime('%H:%M') }}"
        - alias: "Start de verlichting zwak en zo warm mogelijk"
          action: light.turn_on
          target:
            entity_id: light.slaapkamer_zha_group_0x0005
          data:
            brightness_pct: 1
            color_temp_kelvin: "{{ int(state_attr('light.lamp_slaapkamer_plafond', 'min_color_temp_kelvin'), 2202) }}"
    - alias: "Laat de lampen 5 seconden branden, voordat er verder wordt gegaan"
      delay:
        seconds: 5
    - alias: "Simuleer een zonsopkomst met onderstaande instellingen"
      action: light.turn_on
      target:
        entity_id: light.slaapkamer_zha_group_0x0005
      data:
        transition: "{{ int(states('input_number.wekker_wake_up_tijdsspanne'), 15.0) | multiply(60, 900) - 5 }}" # -5 seconden vanwege de delay
        brightness_pct: "{{ int(states('input_number.wekker_wake_up_lichtsterkte'), 80) }}"
        color_temp_kelvin: "{{ int(states('input_number.wekker_wake_up_kleurtemperatuur'), 3000) }}"
    - alias: "Wacht evenlang als dat de verlichting nodig heeft om de juiste helderheid te bereiken, alvorens verder te gaan"
      delay:
        minutes: "{{ float(states('input_number.wekker_wake_up_tijdsspanne'), 15) }}"
    - parallel:
        - alias: "Bepaal of de verlichting in de woonkamer en keuken ingeschakeld moet worden"
          action: script.turn_on
          target:
            entity_id: script.controle_daglicht_woonkamer
        # Tijd voor een update
        - alias: "Geef een statusupdate voor vanochtend"
          action: script.turn_on
          target:
            entity_id: script.tts_statusupdate
    - alias: "Wacht totdat de statusupdate is afgelopen"
      delay:
        seconds: 15
    # Zet de radio aan
    - alias: "Zet de radio aan met deze instellingen"
      action: script.prepare_streaming_radio
      data:
        kamer: "slaapkamer"
        station: "NPO Radio 2"
        volume: 15
    - delay:
        minutes: 5
    - parallel:
        # Zet de radio aan
        - alias: "Zet de radio aan met deze instellingen"
          action: script.prepare_streaming_radio
          data:
            kamer: "woonkamer"
            station: "NPO Radio 2"
            volume: 20
        # Schakel lamp uit
        - action: light.turn_off
          target:
            entity_id: light.slaapkamer_zha_group_0x0005
    # Controleer of er wordt thuisgewerkt vandaag
    - alias: "Controleer op thuiswerken. Ga door wanneer dit niet zo is, stop anders de automatisering."
      if:
        - "{{ is_state('input_boolean.thuiswerk_status', 'off') }}"
      then:
        - variables:
            werklocatie: >-
              {% from 'date_functions.jinja' import vandaag %}
              {{ states('input_select.werklocatie_' ~ vandaag()) | lower }}
        # Bereken op de achtergrond de reistijd naar de betreffende werklocatie zodat deze gegevens actueel zijn
        - alias: "Bereken reistijd naar Aventus locatie"
          action: script.turn_on
          target:
            entity_id: script.calculate_traffic_travel_time_aventus_location
          data:
            variables:
              werklocatie: "{{ werklocatie }}"
        # Eem wachten...
        - delay:
            minutes: "{{ iif(now().isoweekday() in range(1, 4), 20, 35) }}"
        # Stuur een melding van de reistijd naar de werklocatie
        - alias: "Vertel reistijd naar Aventus locatie"
          action: script.turn_on
          target:
            entity_id: script.traffic_travel_time_notification
          data:
            variables:
              werklocatie: "{{ werklocatie }}"
        # Nog even tijdrekken
        - delay:
            minutes: 5
        - parallel:
            # Controle op spelende chromecast in woonkamer
            - if:
                - "{{ is_state('media_player.chromecast_woonkamer', 'playing') }}"
              then:
                # Schakel Chromecast uit
                - action: media_player.turn_off
                  target:
                    entity_id: media_player.chromecast_woonkamer
            # Controle op actieve streaming radio
            - if:
                - "{{ is_state('input_boolean.play_streaming_radio', 'on') }}"
              then:
                # Stop de muziek op Sonos luidsprekers
                - action: input_boolean.turn_off
                  target:
                    entity_id: input_boolean.play_streaming_radio
            # Schakel lampen uit
            - action: light.turn_off
              target:
                entity_id: light.woonkamer_eethoek_keuken_zha_group_0x0008
        - delay:
            seconds: 1
        # Stuur een laatste melding van de reistijd naar werklocatie
        - alias: "Vertel reistijd naar Aventus locatie"
          action: script.turn_on
          target:
            entity_id: script.traffic_travel_time_notification
          data:
            variables:
              werklocatie: "{{ werklocatie }}"
      else:
        stop: "De ochtendroutine is gestopt want er wordt thuisgewerkt"

# Dit script wordt geactiveerd door het script wekker_ochtendroutine
controle_daglicht_woonkamer:
  alias: "Schakel lichtgroep Woonkamer is, wanneer de wektijd voor de zonsopkomst is"
  icon: "mdi:format-list-checkbox"
  description: "Wanneer het schemert of nacht is volgens de sensor woonkamer, schakel de verlichting in de woonkamer in zodat deze aanstaat wanneer Maarten uit bed komt"
  sequence:
    - alias: "Schakel de verlichting van woonkamer en keuken in bij onvoldoende daglicht"
      if:
        - "{{ not is_state('sensor.drempelwaarde_woonkamer', 'dag') }}"
      then:
        - parallel:
            - action: light.turn_on
              target:
                entity_id: light.woonkamer_zha_group_0x0003
              data:
                brightness_pct: 40
                color_temp_kelvin: "{{ states('sensor.kleurtemperatuur_verlichting') }}"
            - action: light.turn_on
              target:
                entity_id: light.keuken_zha_group_0x0002
              data:
                brightness_pct: 30
                color_temp_kelvin: "{{ states('sensor.kleurtemperatuur_verlichting') }}"
      else:
        stop: "Er is voldoende daglicht aanwezig, de verlichting blijft uitgeschakeld."
