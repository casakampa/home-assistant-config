# Template based sensors and buttons
- sensor:
    - unique_id: e52ad878-27ce-42de-8fe2-03d21fbe8797
      name: "{{ this.attributes.get('afvalsoort') }}"
      icon: mdi:delete-restore
      state: >-
        {% set sensor = 'sensor.afvalwijzer_' ~ this.attributes.get('next_type') %}
        {% set collection_date = as_local(as_datetime(state_attr(sensor, 'year_month_day_date'))).date() %}
        {% set days = ['maandag', 'dinsdag', 'woensdag', 'donderdag', 'vrijdag', 'zaterdag', 'zondag' ] %}
        {% set days_until = state_attr(sensor, 'days_until_collection_date') %}
        {% set weeks_until = (days_until / 7) | round(0, 'ceil') %}
        {% if days_until <= 1 %}
          {{ (['Vandaag', 'Morgen'])[days_until] }}
        {% elif (days_until < 7 - now().isoweekday()) or (now().isoweekday() in [6, 7] and days_until < 7) %}
          {{ days[collection_date.weekday()] | title }}
        {% elif days_until < 14 - now().isoweekday() %}
            {{ 'Volgende week ' ~ days[collection_date.weekday()] }}
        {% else %}
            {{ days[collection_date.weekday()] | title ~ ' over ' ~ weeks_until ~ (' weken' if (weeks_until > 1) else ' week') }}
        {% endif %}
      picture: >-
        {% set next_type = this.attributes.get('next_type') %}
        {{ 'https://www.maartenvandekamp.nl/afvalwijzer/' ~ ( next_type ~ '_100.png' if (has_value('sensor.afvalwijzer_' ~ next_type) and not is_state('sensor.afvalwijzer_' ~ next_type, 'Geen')) else 'kliko.jpg' ) }}
      attributes:
        afvalsoort: >-
          {% set afvalsoorten = {
            'papier': 'Papier',
            'gft': 'GFT',
            'pmd': 'Plastic',
            'restafval': 'Restafval'
            } %}
          {{ afvalsoorten.get(this.attributes.get('next_type'), 'Geen') }}
        next_type: "{{ states('sensor.afvalwijzer_next_type') }}"
      availability: "{{ has_value('sensor.afvalwijzer_next_type') and has_value('sensor.afvalwijzer_next_date') }}"
    - unique_id: 0a9bb00d-92b7-4dea-9200-549826a3d8e9
      name: "Kleurtemperatuur verlichting"
      state: >-
        {% set elevation = state_attr('sun.sun', 'elevation') %}
        {% set min_elevation = 0 %}
        {% set max_elevation = 50 %}
        {% set min_color_temp = 2500 %}
        {% set max_color_temp = 5000 %}
        {% if elevation <= min_elevation %}
          {{ min_color_temp }}
        {% elif elevation >= max_elevation %}
          {{ max_color_temp }}
        {% else %}
          {{ int((((elevation - min_elevation) / (max_elevation - min_elevation)) * (max_color_temp - min_color_temp) + min_color_temp ) | round(-2)) }}
        {% endif %}
      unit_of_measurement: "K"
    - unique_id: 1927a36b-0b02-4f91-bac4-67c1bd643d39
      name: "Z-Stack coordinator firmware"
      state: >-
        {% set source = 'sensor.z_stack_firmware_releases' -%}
        {# Vul de variabele 'version' met de nieuwste release van de Z-Stack coordinator firmware release van Koenkk -#}
        {% set version = states(source) -%}
        {# Vul de variabele 'prerelease' en controleer of deze versie een prerelease is (true) -#}
        {% set prerelease = is_state_attr(source, 'prerelease', true) -%}
        {# Vul de sensor met de nieuwe waarde na controle of 'version' inhoud heeft en er geen sprake is van een prerelease (not), behoud anders de huidige staat (this.state) -#}
        {{ version.split('_')[3] if version | length > 0 and has_value(source) and not prerelease else this.state }}
      attributes:
        html_url: "{{ state_attr('sensor.z_stack_firmware_releases', 'html_url') }}"
    # Bereken de buitentemperatuur op basis van de twee bronnen, wanneer beide beschikbaar zijn
    - unique_id: 6666735d-54d5-4288-b3ed-2e39c07ce654
      name: "Buitentemperatuur"
      icon: mdi:thermometer
      state: "{{ (( state_attr('weather.thuis', 'temperature') + state_attr('weather.home', 'temperature')) / 2 ) | round(1, 0) }}"
      unit_of_measurement: "Â°C"
      availability: "{{ is_number(state_attr('weather.thuis', 'temperature')) and is_number(state_attr('weather.home', 'temperature')) }}"
      device_class: temperature
      state_class: measurement
# Maak een nieuwe template sensor voor beweging in de gang
- trigger:
    - platform: state
      entity_id:
        - binary_sensor.hue_motion_gang_occupancy
        - binary_sensor.hue_motion_trap_occupancy
  binary_sensor:
    - unique_id: afb7cb84-af8e-423f-8562-41744ce0e8b7
      name: "Gang template motion sensor"
      icon: mdi:motion-sensor
      state: "{{ is_state('binary_sensor.hue_motion_gang_occupancy', 'on') or is_state('binary_sensor.hue_motion_trap_occupancy', 'on') }}"
      device_class: motion
      availability: "{{ (has_value('binary_sensor.hue_motion_gang_occupancy') and has_value('binary_sensor.hue_motion_trap_occupancy')) }}"
# Maak een nieuwe template sensor voor beweging in de woonkamer en keuken
- trigger:
    - platform: state
      entity_id:
        - binary_sensor.aqara_motion_keuken
        - binary_sensor.hue_motion_woonkamer_occupancy
  binary_sensor:
    - unique_id: 6e4c8f17-9d6c-4972-815e-3e82eea161ee
      name: "Woonkamer template motion sensor"
      icon: mdi:motion-sensor
      state: "{{ is_state('binary_sensor.aqara_motion_keuken', 'on') or is_state('binary_sensor.hue_motion_woonkamer_occupancy', 'on') }}"
      device_class: motion
      availability: "{{ (has_value('binary_sensor.aqara_motion_keuken') and has_value('binary_sensor.hue_motion_woonkamer_occupancy')) }}"
# Maakt een sensor die wordt ingeschakeld wanneer de thermostaat de ingestelde maximumtemperatuur overschrijdt
- trigger:
    - platform: state
      entity_id: climate.otgw
      attribute: temperature
  #  - platform: state # voor testdoeleinden
  #    entity_id: input_number.thermostaat_test_temperatuur
  binary_sensor:
    - unique_id: 5080c052-00c1-4318-8d39-95efda56f34a
      name: "Overschrijding Maximumtemperatuur Thermostaat"
      state: "{{ float(state_attr(trigger.entity_id, 'temperature'), 19.5) > float(states('input_number.thermostaat_maximum_temperatuur'), 19.5) }}"
      availability: "{{ is_number(state_attr('climate.otgw', 'temperature')) and is_number(states('input_number.thermostaat_maximum_temperatuur')) }}"
      # state: "{{ float(states(trigger.entity_id), 19.5) > float(states('input_number.thermostaat_maximum_temperatuur'), 19.5) }}" # voor testdoeleinden
- trigger:
    - platform: state
      entity_id: input_boolean.wekker_status
  sensor:
    - unique_id: cc6c6db8-06d4-40ff-997e-704ae9724fc2
      name: "Wekkermodus"
      state: "{{ iif(is_state(trigger.entity_id, 'on'), 'Actief', 'Vakantie') }}"
      icon: "{{ iif(is_state(trigger.entity_id, 'on'), 'mdi:alarm', 'mdi:beach') }}"
      availability: "{{ has_value(trigger.entity_id) }}"
# Monitor de beschikbaarheid van de lampen in het Zigbee netwerk.
- binary_sensor:
    - unique_id: c5bc96be-8d86-4a41-94f1-1f594427f912
      name: "Beschikbaarheid lampen"
      state: "{{ this.attributes.onbereikbaar | default(0) >= 1 }}"
      attributes:
        onbereikbaar: "{{ states.light | rejectattr('entity_id', 'contains', 'zha') | rejectattr('state', 'in', ['on', 'off']) | list | count }}"
# Knoppen om scripts te activeren
- button:
    - unique_id: b4ad4b16-567e-4ba4-a7c4-4a9d47650493
      name: "Maak Backup"
      icon: mdi:arrange-bring-forward
      press:
        - service: script.turn_on
          target:
            entity_id: script.backup_script
- button:
    - unique_id: 40d0a386-fe2a-4501-b315-0c400b9fd838
      name: "Korte pixel refresh"
      icon: mdi:television-shimmer
      press:
        - service: script.turn_on
          target:
            entity_id: script.lg_pixel_refresh_kort
- button:
    - unique_id: a6d6c20d-4569-4a52-a3ec-60d128f56eec
      name: "Lange pixel refresh"
      icon: mdi:television-shimmer
      press:
        - service: script.turn_on
          target:
            entity_id: script.lg_pixel_refresh_lang
- button:
    - unique_id: 8c50d327-0425-43a5-82c3-2531d24357ec
      name: "Reset DNSWL timer"
      icon: mdi:calendar-refresh
      press:
        - service: input_datetime.set_datetime
          target:
            entity_id: input_datetime.dnswl_renew_date
          data:
            date: "{{ (now() + timedelta(days=90)).strftime('%Y-%m-%d') }}"
- button:
    - unique_id: 98f4f388-1b66-49ec-9985-e24546d1e9f4
      name: "Reset Melatonine melding"
      icon: mdi:calendar-refresh
      press:
        - service: input_datetime.set_datetime
          target:
            entity_id: input_datetime.melatonine_out_of_stock
          data:
            date: "{{ (now() + timedelta(days=90)).strftime('%Y-%m-%d') }}"
